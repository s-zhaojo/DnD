/* Set up the general layout */
.App {
  text-align: center;
  background-color: #f4f7fc;
  font-family: 'Arial', sans-serif;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  padding: 20px;
}

.App-header {
  max-width: 600px;
  margin: auto;
  background-color: #fff;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  text-align: center;
}

h1 {
  font-size: 2.5em;
  color: #4a90e2;
  margin-bottom: 10px;
}

p {
  font-size: 1.2em;
  color: #333;
}

.dice-section {
  margin: 20px;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  text-align: center;
  width: 250px;
}

/* Different background colors for each dice section */
#happy {
  background-color: #fff4a3; /* Yellow */
}

#mad {
  background-color: #ffaaaa; /* Red */
}

#sad {
  background-color: #a3c4ff; /* Blue */
}

button {
  background-color: #4a90e2;
  color: white;
  font-size: 1.2em;
  padding: 15px 25px;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
}

button:hover {
  background-color: #357ab7;
}

button:disabled {
  background-color: #a3b9d3;
  cursor: not-allowed;
}

.dice-container {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 30px;
}

/* Dice styles */
.dice {
  width: 100px;
  height: 100px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 3em;
  font-weight: bold;
  border: 2px solid #ddd;
  border-radius: 10px;
}

/* Colors for individual dice */
.dice.happy {
  background-color: #ffeb3b; /* Yellow */
  color: #000;
}

.dice.mad {
  background-color: #ff5722; /* Red */
  color: #fff;
}

.dice.sad {
  background-color: #2196f3; /* Blue */
  color: #fff;
}

.dice.rolling {
  animation: rollDice 1s infinite;
}

@keyframes rollDice {
  0% {
    transform: rotateX(0deg) rotateY(0deg);
  }
  25% {
    transform: rotateX(180deg) rotateY(0deg);
  }
  50% {
    transform: rotateX(0deg) rotateY(180deg);
  }
  75% {
    transform: rotateX(180deg) rotateY(180deg);
  }
  100% {
    transform: rotateX(360deg) rotateY(360deg);
  }
}
